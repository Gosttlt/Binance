{"version":3,"sources":["Components/Tebles/s.module.css","Api/wsApi.ts","Store/StockGlassReducer/selectors.ts","Components/Tebles/TableItem.tsx","Components/Tebles/RowTeble.tsx","Components/Tebles/index.tsx","Api/stockExchangeApi.ts","Store/StockGlassReducer/actions.ts","Pages/PageTwo/s.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/DropDown/DropdownItem.tsx","Components/DropDown/index.tsx","Pages/PageTwo/index.tsx","Containers/PageTwoContainer.tsx"],"names":["module","exports","ws","messageHandler","e","cb","data","JSON","parse","asks","a","filter","map","bids","b","wsApi","createWs","symbol","WebSocket","subscribe","addEventListener","closeWs","removeEventListener","close","getTotal","arr","getTableHeader","state","StockGlassReducer","arrItemsTableHeader","getSymbol","currentSymbol","getSymbols","symbols","getValuesBids","createSelector","updatedValues","v","r","getValuesAsks","getLastUpdateBids","lastUpdateValues","getLastUpdateAsks","TableItem","name","index","className","s","tableItem","RowTeble","items","itemsTable","useMemo","item","rowTeble","TableBox","nameHead","tableValues","arrValuesTable","tableBox","tableHeaderFixedContainer","tableHeaderFixed","headingTable","headerTableBox","tableBody","Preloader","stockExchangeApi","getData","fetch","json","resp","setUpdateTableAction","type","SET_UPDATE","setLastUpdateAction","SET_LAST_UPDATE","setUpdateSymbol","SET_UPDATE_SYMBOL","setUpdateSymbolAction","dispatch","setUpdateTable","isLoading","SET_IS_LOADING_TABLE","setLastUpdate","_slicedToArray","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","DropdownItem","setSymbol","onClick","DropDown","useDispatch","useState","toggleButton","setToggleButton","useCallback","symbolsArr","PageTwo","valuesBids","valuesAsks","pageBox","Container","page_two__table_box","PageTwoContainer","useSelector","useEffect","currentSymbolLower","toLowerCase"],"mappings":"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","file":"static/js/5.18f824b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowTeble\":\"s_rowTeble__1yv9P\",\"last-child\":\"s_last-child__2lzJ-\",\"tableItem\":\"s_tableItem__1cRKy\",\"headingTable\":\"s_headingTable__2fxrk\",\"tableBox\":\"s_tableBox__3m7Nk\",\"tableBody\":\"s_tableBody__1QPPT\",\"headerTableBox\":\"s_headerTableBox__HPGOH\",\"tableHeaderFixed\":\"s_tableHeaderFixed__2TA8I\",\"tableHeaderFixedContainer\":\"s_tableHeaderFixedContainer__1nE-n\"};","/** @format */\n\nimport { LowerSymbolType } from 'Store/StockGlassReducer/types'\n\ntype DataType = string[] | number[]\ntype CbType = { asks: number[][]; bids: number[][] }\ntype CbDataType = { a: DataType[]; b: DataType[] }\n\nlet ws: WebSocket | null = null\n\nconst messageHandler = (e: MessageEvent, cb?: (data: CbType) => void) => {\n  const data = JSON.parse(e.data) as CbDataType\n  let asks = data.a\n    .filter((a: DataType) => +a[1] !== 0)\n    .map(a => ([a[0], a[1]] = [+a[0], +a[1]]))\n  let bids = data.b\n    .filter((b: DataType) => +b[1] !== 0)\n    .map((b: DataType) => ([b[0], b[1]] = [+b[0], +b[1]]))\n  const arr = {\n    asks: asks,\n    bids: bids,\n  } as CbType\n\n  if (cb) {\n    cb(arr)\n  }\n}\n\nconst wsApi = {\n  createWs: (symbol: LowerSymbolType): WebSocket => {\n    ws = new WebSocket(`wss://stream.binance.com:9443/ws/${symbol}@depth`)\n    return ws\n  },\n  subscribe: async (ws: WebSocket | null, cb: () => void) => {\n    await ws?.addEventListener('message', e => messageHandler(e, cb))\n  },\n  closeWs: async () => {\n    await ws?.removeEventListener('message', messageHandler)\n    await ws?.close(1000, 'closeWs')\n  },\n}\n\nexport default wsApi\n","/** @format */\n\nimport { AppStateType } from 'Store/index'\n\nimport { createSelector } from 'reselect'\n\nconst getTotal = (arr: number[]): number[] => {\n  ;[arr[2]] = [+arr[0] * +arr[1]]\n  return [...arr]\n}\n\nconst getBids = (state: AppStateType) =>\n  state.StockGlassReducer.updatedValues.bids\nconst getAsks = (state: AppStateType) =>\n  state.StockGlassReducer.updatedValues.asks\nconst getLastBids = (state: AppStateType) =>\n  state.StockGlassReducer.lastUpdateValues.bids\nconst getLastAsks = (state: AppStateType) =>\n  state.StockGlassReducer.lastUpdateValues.asks\n\nexport const getIsLoadingTable = (state: AppStateType) =>\n  state.StockGlassReducer.isLoadingTable\nexport const getTableHeader = (state: AppStateType) =>\n  state.StockGlassReducer.arrItemsTableHeader\nexport const getSymbol = (state: AppStateType) =>\n  state.StockGlassReducer.currentSymbol\nexport const getSymbols = (state: AppStateType) =>\n  state.StockGlassReducer.symbols\n\nexport const getValuesBids = createSelector(getBids, v =>\n  v.map((r: number[]) => getTotal(r))\n)\nexport const getValuesAsks = createSelector(getAsks, v =>\n  v.map((r: number[]) => getTotal(r))\n)\nexport const getLastUpdateBids = createSelector(getLastBids, v =>\n  v.map((r: number[]) => getTotal(r))\n)\nexport const getLastUpdateAsks = createSelector(getLastAsks, v =>\n  v.map((r: number[]) => getTotal(r))\n)\n","/** @format */\n\nimport { TableHeaderType } from 'Store/StockGlassReducer/types'\nimport s from './s.module.css'\n\ntype PropsType = { name: TableHeaderType | number; index: number }\n\nconst TableItem: React.FC<PropsType> = ({ name, index }) => {\n  return (\n    <div className={s.tableItem + ' ' + (index === 2 ? 'deactive' : '')}>\n      {name}\n    </div>\n  )\n}\n\nexport default TableItem\n","/** @format */\n\nimport { useMemo } from 'react'\nimport { TableHeaderType } from 'Store/StockGlassReducer/types'\nimport s from './s.module.css'\nimport TableItem from './TableItem'\n\ntype PropsType = {\n  items: number[] | TableHeaderType[]\n}\nconst RowTeble: React.FC<PropsType> = ({ items }) => {\n  const itemsTable = useMemo(\n    () =>\n      items.map((item, index) => (\n        <TableItem name={item} key={index} index={index} />\n      )),\n    [items]\n  )\n\n  return <div className={s.rowTeble}>{itemsTable}</div>\n}\n\nexport default RowTeble\n","/** @format */\n\nimport Preloader from 'Components/Preloader'\nimport { useMemo } from 'react'\nimport { SymbolType, TableHeaderType } from 'Store/StockGlassReducer/types'\nimport RowTeble from './RowTeble'\nimport s from './s.module.css'\n\ntype PropsType = {\n  nameHead?: string\n  arrItemsTableHeader: TableHeaderType[]\n  tableValues: Array<number[]>\n  currentSymbol: SymbolType\n}\n\nconst TableBox: React.FC<PropsType> = ({\n  nameHead,\n  arrItemsTableHeader,\n  tableValues,\n  currentSymbol,\n}) => {\n  const arrValuesTable = useMemo(\n    () => tableValues.map((arr, index) => <RowTeble items={arr} key={index} />),\n    [tableValues]\n  )\n  return (\n    <div className={s.tableBox}>\n      <div className={s.tableHeaderFixedContainer}>\n        <div className={s.tableHeaderFixed}>\n          <div className={s.headingTable}>{nameHead + ' ' + currentSymbol}</div>\n          <div className={s.headerTableBox}>\n            <RowTeble items={arrItemsTableHeader} />\n          </div>\n        </div>\n      </div>\n      <div className={s.tableBody}>\n        {!+tableValues[0][1] ? <Preloader /> : arrValuesTable}\n      </div>\n    </div>\n  )\n}\nexport default TableBox\n","/** @format */\n\nimport { SymbolType, UpdateDataType } from 'Store/StockGlassReducer/types'\n\ntype DataType = string[] | number[]\n\nconst stockExchangeApi = {\n  getData: async (symbol: SymbolType): Promise<UpdateDataType> => {\n    const data = await fetch(\n      `https://api.binance.com/api/v3/depth?symbol=${symbol}&limit=500`\n    )\n    const resp = await data.json()\n\n    let bids = resp.bids\n      .filter((b: DataType) => +b[1] !== 0)\n      .map((b: DataType) => ([b[0], b[1]] = [+b[0], +b[1]]))\n    let asks = resp.asks\n      .filter((a: DataType) => +a[1] !== 0)\n      .map((a: DataType) => ([a[0], a[1]] = [+a[0], +a[1]]))\n    const arr = {\n      bids: bids,\n      asks: asks,\n    }\n    return arr\n  },\n}\n\nexport default stockExchangeApi\n","/** @format */\n\nimport {\n  UpdateDataType,\n  SetUpdateDataType,\n  SetLastUpdateDataType,\n  SymbolType,\n  SetUpdateSymbolType,\n  SetIsLoadingTableType,\n  LowerSymbolType,\n} from './types'\n\nimport stockExchangeApi from 'Api/stockExchangeApi'\nimport wsApi from 'Api/wsApi'\nimport { Dispatch } from 'redux'\nimport {\n  SET_UPDATE,\n  SET_UPDATE_SYMBOL,\n  SET_LAST_UPDATE,\n  SET_IS_LOADING_TABLE,\n} from './constants'\n\nconst setUpdateTableAction = (data: UpdateDataType): SetUpdateDataType => ({\n  type: SET_UPDATE,\n  data,\n})\nconst setLastUpdateAction = (data: UpdateDataType): SetLastUpdateDataType => ({\n  type: SET_LAST_UPDATE,\n  data,\n})\n\nexport const setUpdateSymbol = (symbol: SymbolType): SetUpdateSymbolType => ({\n  type: SET_UPDATE_SYMBOL,\n  symbol,\n})\nexport const setIsLoadingTable = (\n  isLoading: boolean\n): SetIsLoadingTableType => ({\n  type: SET_IS_LOADING_TABLE,\n  isLoading,\n})\n\nexport const setUpdateSymbolAction =\n  (symbol: SymbolType): any =>\n  async (dispatch: Dispatch) => {\n    wsApi.closeWs()\n    dispatch(setUpdateSymbol(symbol))\n  }\n\nexport const setUpdateTable =\n  (symbol: SymbolType): any =>\n  async (dispatch: Dispatch) => {\n    const data = await stockExchangeApi.getData(symbol)\n    dispatch(setUpdateTableAction(data))\n    dispatch(setIsLoadingTable(false))\n  }\nexport const setLastUpdate =\n  (symbol: LowerSymbolType): any =>\n  async (dispatch: Dispatch) => {\n    const ws = await wsApi.createWs(symbol)\n    const cb = (data: UpdateDataType): void => {\n      dispatch(setLastUpdateAction(data))\n    }\n    //@ts-ignore\n    wsApi.subscribe(ws, cb)\n  }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_two__table_box\":\"s_page_two__table_box__12wbP\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/** @format */\n\nimport { SymbolType } from 'Store/StockGlassReducer/types'\n\ntype PropsType = {\n  name: SymbolType\n  setSymbol: any\n}\n\nconst DropdownItem: React.FC<PropsType> = ({ name, setSymbol }) => {\n  return (\n    <li className='dropdown-item btn' onClick={() => setSymbol(name)}>\n      {name}\n    </li>\n  )\n}\n\nexport default DropdownItem\n","/** @format */\n\nimport { useState } from 'react'\nimport { useCallback } from 'react'\nimport { useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { SymbolType } from 'Store/StockGlassReducer/types'\nimport DropdownItem from './DropdownItem'\n\ntype PropsType = {\n  currentSymbol: SymbolType\n  symbols: SymbolType[]\n  setUpdateSymbol: any\n}\n\nconst DropDown: React.FC<PropsType> = ({\n  currentSymbol,\n  symbols,\n  setUpdateSymbol,\n}) => {\n  const dispatch = useDispatch()\n  const [toggleButton, setToggleButton] = useState(false)\n\n  const setSymbol = useCallback(\n    name => {\n      setToggleButton(false)\n      dispatch(setUpdateSymbol(name))\n    },\n    [dispatch, setUpdateSymbol]\n  )\n\n  const symbolsArr = useMemo(\n    () =>\n      symbols\n        .filter(s => s !== currentSymbol)\n        .map(s => {\n          return <DropdownItem name={s} key={s} setSymbol={setSymbol} />\n        }),\n    [symbols, setSymbol, currentSymbol]\n  )\n\n  return (\n    <div className='position-relative'>\n      <button\n        onClick={() => setToggleButton(!toggleButton)}\n        className='btn btn-primary dropdown-toggle '\n      >\n        {currentSymbol}\n      </button>\n      <ul className={'dropdown-menu ' + (toggleButton ? 'd-block' : 'd-none')}>\n        {symbolsArr}\n      </ul>\n    </div>\n  )\n}\n\nexport default DropDown\n","/** @format */\n\nimport s from './s.module.css'\nimport Container from 'Components/Container'\nimport DropDown from 'Components/DropDown'\nimport TableBox from 'Components/Tebles'\nimport { SymbolType, TableHeaderType } from 'Store/StockGlassReducer/types'\n\ntype PropsType = {\n  currentSymbol: SymbolType\n  symbols: SymbolType[]\n  setUpdateSymbol: any\n  valuesBids: Array<number[]>\n  valuesAsks: Array<number[]>\n  arrItemsTableHeader: TableHeaderType[]\n}\n\nconst PageTwo: React.FC<PropsType> = ({\n  currentSymbol,\n  symbols,\n  setUpdateSymbol,\n  valuesBids,\n  valuesAsks,\n  arrItemsTableHeader,\n}) => {\n  return (\n    <div className={s.pageBox}>\n      <Container>\n        <DropDown\n          currentSymbol={currentSymbol}\n          symbols={symbols}\n          setUpdateSymbol={setUpdateSymbol}\n        />\n        <div className={s.page_two__table_box}>\n          <TableBox\n            nameHead='Bid'\n            currentSymbol={currentSymbol}\n            arrItemsTableHeader={arrItemsTableHeader}\n            tableValues={valuesBids}\n          />\n          <TableBox\n            nameHead='Ask'\n            currentSymbol={currentSymbol}\n            arrItemsTableHeader={arrItemsTableHeader}\n            tableValues={valuesAsks}\n          />\n        </div>\n      </Container>\n    </div>\n  )\n}\nexport default PageTwo\n","/** @format */\n\nimport wsApi from 'Api/wsApi'\nimport PageTwo from 'Pages/PageTwo'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  setLastUpdate,\n  setUpdateSymbolAction,\n} from 'Store/StockGlassReducer/actions'\nimport {\n  getLastUpdateBids,\n  getLastUpdateAsks,\n  getSymbol,\n  getSymbols,\n  getTableHeader,\n} from 'Store/StockGlassReducer/selectors'\nimport { LowerSymbolType } from 'Store/StockGlassReducer/types'\n\nconst PageTwoContainer = () => {\n  const dispatch = useDispatch()\n\n  const currentSymbol = useSelector(getSymbol)\n  const symbols = useSelector(getSymbols)\n  const valuesBids = useSelector(getLastUpdateBids)\n  const valuesAsks = useSelector(getLastUpdateAsks)\n  const arrItemsTableHeader = useSelector(getTableHeader)\n\n  useEffect(() => {\n    const currentSymbolLower = currentSymbol.toLowerCase() as LowerSymbolType\n\n    dispatch(setLastUpdate(currentSymbolLower))\n  }, [dispatch, currentSymbol])\n\n  //@ts-ignore\n  useEffect(() => () => wsApi.closeWs(), [])\n\n  return (\n    <PageTwo\n      arrItemsTableHeader={arrItemsTableHeader}\n      currentSymbol={currentSymbol}\n      symbols={symbols}\n      setUpdateSymbol={setUpdateSymbolAction}\n      valuesBids={valuesBids}\n      valuesAsks={valuesAsks}\n    />\n  )\n}\n\nexport default PageTwoContainer\n"],"sourceRoot":""}